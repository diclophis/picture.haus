---
- hosts: localhost
  connection: local
  tasks:
    - name: determine public ip
      shell: "dig +short myip.opendns.com @resolver1.opendns.com"
      register: public_ip_result

    - set_fact:
        public_ip: "{{ public_ip_result.stdout }}"

    - debug: msg="{{ public_ip }}"

    - ec2_group:
        name: bardin-haus
        description: allows SSH and HTTP only
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: "{{ public_ip }}/32"
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "{{ public_ip }}/32"

    - ec2:
        instance_type: m3.large
        image: ami-22245442
        keypair: "{{ lookup('ENV', 'EC2_KEYPAIR') }}"
        volumes:
          - device_name: /dev/sda1
            device_type: gp2
            volume_size: "500"
        exact_count: 1
        wait: yes
        group: bardin-haus
        instance_tags:
          Name: "bardin-haus"
        count_tag:
          Name: "bardin-haus"
      register: instance

    - name: "provision naked DNS"
      route53:
        command: create
        zone: "bardin.haus"
        record: "bardin.haus"
        type: A
        ttl: 60
        value: "{{ instance.tagged_instances[0].public_ip }}"
        overwrite: true

    - name: "provision wildcard DNS"
      route53:
        command: create
        zone: "bardin.haus"
        record: "*.bardin.haus"
        type: CNAME
        ttl: 60
        value: "bardin.haus"
        overwrite: true
